/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CVSAdminRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Organization.CVSPharmacyStoreOrganization;
import Business.Organization.Organization;
import Business.PharmacyInventory.InventoryList;
import Business.PharmacySupplier.SupplierCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Saurabh
 */

public class ManagePharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePharmacyJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    public ManagePharmacyJPanel(JPanel upc,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=upc;
        this.enterprise=enterprise;
        populatePharmacyStoresTable();
        
    }

    public void populatePharmacyStoresTable(){
        DefaultTableModel dtm=(DefaultTableModel)pharmacyStoresJTable.getModel();
        pharmacyStoresJTable.setRowSorter(new TableRowSorter(dtm));
        dtm.setRowCount(0);
        for (Organization p : enterprise.getOrganizationDirectory().getOrganizationList()) {
            CVSPharmacyStoreOrganization store=(CVSPharmacyStoreOrganization)p;
            Object[] row = new Object[4];
            row[0] = p;
            row[1] = store.getLocation();
            row[2] = store.getStoreContact();
            row[3] = store.getStoreAddress();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pharmacyStoresJTable = new javax.swing.JTable();
        checkInventoryStatusJButton = new javax.swing.JButton();
        manageCatalogJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        removeStoreJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Pharmacy");

        jLabel2.setText("Select Pharmacy from table below:");

        pharmacyStoresJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Pharmacy Name", "Location", "Contact", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pharmacyStoresJTable);

        checkInventoryStatusJButton.setBackground(new java.awt.Color(0, 0, 0));
        checkInventoryStatusJButton.setForeground(new java.awt.Color(255, 255, 255));
        checkInventoryStatusJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/check-inventory.png"))); // NOI18N
        checkInventoryStatusJButton.setText("Check Inventory Status");
        checkInventoryStatusJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInventoryStatusJButtonActionPerformed(evt);
            }
        });

        manageCatalogJButton.setBackground(new java.awt.Color(0, 0, 0));
        manageCatalogJButton.setForeground(new java.awt.Color(255, 255, 255));
        manageCatalogJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/save-catalog.png"))); // NOI18N
        manageCatalogJButton.setText("Manage Store Catalog");
        manageCatalogJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCatalogJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/arrow-back-icon.png"))); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeStoreJButton.setBackground(new java.awt.Color(0, 0, 0));
        removeStoreJButton.setForeground(new java.awt.Color(255, 255, 255));
        removeStoreJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/remove-drug.png"))); // NOI18N
        removeStoreJButton.setText("Remove");
        removeStoreJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStoreJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(backJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkInventoryStatusJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(manageCatalogJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeStoreJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkInventoryStatusJButton)
                    .addComponent(manageCatalogJButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(removeStoreJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(171, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkInventoryStatusJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInventoryStatusJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=pharmacyStoresJTable.getSelectedRow();
        if(selectedRow>=0){
            CVSPharmacyStoreOrganization p=(CVSPharmacyStoreOrganization)pharmacyStoresJTable.getValueAt(selectedRow, 0);
            InventoryList inventoryList=p.getInventoryListOfPharmacy();
            CheckInventoryJPanel cijp=new CheckInventoryJPanel(userProcessContainer,p);
            userProcessContainer.add("CheckInventoryJPanel",new JScrollPane(cijp));
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a pharmacy row to view inventory details", "Info", JOptionPane.INFORMATION_MESSAGE);   
        }
        
    }//GEN-LAST:event_checkInventoryStatusJButtonActionPerformed

    private void manageCatalogJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCatalogJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=pharmacyStoresJTable.getSelectedRow();
        if(selectedRow>=0){
            PharmacyEnterprise pharmacyEnterprise=(PharmacyEnterprise) enterprise;
       SupplierCatalog supplierCatalog=pharmacyEnterprise.getSupplierCatalog();
        CVSPharmacyStoreOrganization p=(CVSPharmacyStoreOrganization)pharmacyStoresJTable.getValueAt(selectedRow, 0);
        ManageStoreDrugCatalogJPanel msdcjp=new ManageStoreDrugCatalogJPanel(userProcessContainer,p,supplierCatalog);
        userProcessContainer.add("ManageStoreDrugCatalogJPanel",new JScrollPane(msdcjp));
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a pharmacy row to manage catalog", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_manageCatalogJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this.getParent().getParent());
        userProcessContainer.remove(this.getParent());
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeStoreJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStoreJButtonActionPerformed
        // TODO add your handling code here
        int selectedRow=pharmacyStoresJTable.getSelectedRow();
        
        if(selectedRow<0){
           JOptionPane.showMessageDialog(null, "Please select a  row to remove store", "Info", JOptionPane.INFORMATION_MESSAGE);
           return;
       }else{
            
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the Account Details?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION){
                Organization p=(Organization)pharmacyStoresJTable.getValueAt(selectedRow,0);
                enterprise.getOrganizationDirectory().getOrganizationList().remove(p);
                JOptionPane.showMessageDialog(null, "Pharmacy store removed from Directory.", "Info", JOptionPane.INFORMATION_MESSAGE);
                populatePharmacyStoresTable();
            }
       }
    }//GEN-LAST:event_removeStoreJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton checkInventoryStatusJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton manageCatalogJButton;
    private javax.swing.JTable pharmacyStoresJTable;
    private javax.swing.JButton removeStoreJButton;
    // End of variables declaration//GEN-END:variables
}
