/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CVSAdminRole;

import Business.Organization.CVSPharmacyStoreOrganization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Drug.Drug;
import Business.Drug.DrugCatalog;

import Business.PharmacySupplier.Supplier;
import Business.PharmacySupplier.SupplierCatalog;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Saurabh
 */
public class ManageStoreDrugCatalogJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStoreDrugCatalogJPanel
     */
    private JPanel userProcessContainer;
    private DrugCatalog drugCatalog;
    private CVSPharmacyStoreOrganization cvsStore;
    private SupplierCatalog supplierCatalog;
    public ManageStoreDrugCatalogJPanel(JPanel upc,CVSPharmacyStoreOrganization cvsStore,SupplierCatalog sc) {
        initComponents();
        this.userProcessContainer=upc;
        this.cvsStore=cvsStore;
        this.drugCatalog=cvsStore.getDrugCatalogofPharmacy();
        this.supplierCatalog=sc;
        pharmacyNameJText.setText(cvsStore.getName());
        //SupplierCatalog supplierCatalog=new SupplierCatalog();
        populatestoreCatalogJTable(supplierCatalog);
        populatesupplierJComboBox(supplierCatalog);
        
    }
    
    public void populatesupplierJComboBox(SupplierCatalog sc){
        
        supplierJComboBox.removeAllItems();
        
        for(Supplier supplier:sc.getSupplierList()){
            supplierJComboBox.addItem(supplier);
        }
        populatesupplierDrugJTable();
     }
    public void populatesupplierDrugJTable(SupplierCatalog sc){
        Supplier s=(Supplier)supplierJComboBox.getSelectedItem();
        DefaultTableModel dtm=(DefaultTableModel)supplierDrugJTable.getModel();
        supplierDrugJTable.setRowSorter(new TableRowSorter(dtm));
        dtm.setRowCount(0);
        
        for (Drug d : s.getDrugListOfSupplier()) {
           
            Object[] row = new Object[1];
            row[0] = d;
            dtm.addRow(row);
        }
    }
    public void populatestoreCatalogJTable(SupplierCatalog sc){
//        SupplierCatalog supplierCatalog=new SupplierCatalog();
        DefaultTableModel dtm=(DefaultTableModel)storeCatalogJTable.getModel();
        storeCatalogJTable.setRowSorter(new TableRowSorter(dtm));
        dtm.setRowCount(0);
        for (Drug drug : drugCatalog.getDrugList()) {
            Object[] row = new Object[2];
            row[0] = drug;
            for(Supplier s:sc.getSupplierList()){
                for(Drug d:s.getDrugListOfSupplier()){
                    if(d.getDrugName()==drug.getDrugName()){
                        row[1] = s;
                        
                    }
                }
                
            }
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeCatalogJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        supplierJComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        supplierDrugJTable = new javax.swing.JTable();
        addToCatalogJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        removeFromCatalogJButton = new javax.swing.JButton();
        pharmacyNameJText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Product Catalog");

        jLabel2.setText("Store Catalog");

        storeCatalogJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drug Name", "Pharma(Supplier)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeCatalogJTable);

        jLabel3.setText("Supplier");

        supplierJComboBox.setBackground(new java.awt.Color(0, 0, 0));
        supplierJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        supplierJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        supplierJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierJComboBoxActionPerformed(evt);
            }
        });

        supplierDrugJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Drug"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(supplierDrugJTable);

        addToCatalogJButton.setBackground(new java.awt.Color(0, 0, 0));
        addToCatalogJButton.setForeground(new java.awt.Color(255, 255, 255));
        addToCatalogJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Button-Submit-icon.png"))); // NOI18N
        addToCatalogJButton.setText("Add to Catalog");
        addToCatalogJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCatalogJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/arrow-back-icon.png"))); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeFromCatalogJButton.setBackground(new java.awt.Color(0, 0, 0));
        removeFromCatalogJButton.setForeground(new java.awt.Color(255, 255, 255));
        removeFromCatalogJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/remove-drug.png"))); // NOI18N
        removeFromCatalogJButton.setText("Remove from Catalog");
        removeFromCatalogJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromCatalogJButtonActionPerformed(evt);
            }
        });

        pharmacyNameJText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pharmacyNameJText.setEnabled(false);

        jLabel4.setText("Supplier Catalog");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(backJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addToCatalogJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pharmacyNameJText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(supplierJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(removeFromCatalogJButton))
                        .addContainerGap(319, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pharmacyNameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeFromCatalogJButton)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(supplierJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addToCatalogJButton)
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addContainerGap(104, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeFromCatalogJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromCatalogJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=storeCatalogJTable.getSelectedRow();
        if(selectedRow>=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the Account Details?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Drug d = (Drug) storeCatalogJTable.getValueAt(selectedRow, 0);
                drugCatalog.deleteDrug(d);
                populatestoreCatalogJTable(supplierCatalog);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a  row to remove drug", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_removeFromCatalogJButtonActionPerformed

    private void supplierJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierJComboBoxActionPerformed
        // TODO add your handling code here:
        populatesupplierDrugJTable();
        
    }//GEN-LAST:event_supplierJComboBoxActionPerformed

    private void addToCatalogJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCatalogJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=supplierDrugJTable.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a  row to add drug", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{  
                Drug selectedDrug=(Drug)supplierDrugJTable.getValueAt(selectedRow,0);
                boolean alreadyPresent=false;
                for(Drug d:drugCatalog.getDrugList()){
                        if(d.getDrugName()==selectedDrug.getDrugName()){
                            JOptionPane.showMessageDialog(null, "Drug already exist in catalog", "Info", JOptionPane.INFORMATION_MESSAGE);
                            alreadyPresent=true;
                            break;
                        }
                    }
                    if(!alreadyPresent){
                            Drug d=drugCatalog.addDrug();
                            d.setDrugName(selectedDrug.getDrugName());
                            d.setSerialNumber(selectedDrug.getSerialNumber());
                            d.setExpirationDate(selectedDrug.getExpirationDate());
                            d.setManufacturingDate(selectedDrug.getManufacturingDate());
                            d.setPowerOfDrugInMg(selectedDrug.getPowerOfDrugInMg());
                            d.setSuggestedListPrice(selectedDrug.getSuggestedListPrice());
                            d.setStorageConditions(selectedDrug.getStorageConditions());
                            d.setType(selectedDrug.getType());
                            d.setfDADrugCategory(selectedDrug.getfDADrugCategory());
                            d.setDrugAllergies(selectedDrug.getDrugAllergies());
                            populatestoreCatalogJTable(supplierCatalog);
                            JOptionPane.showMessageDialog(null, "Drug added in catalog", "Info", JOptionPane.INFORMATION_MESSAGE);
                    }
                
            }
                    
        
        
    }//GEN-LAST:event_addToCatalogJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this.getParent().getParent());
        userProcessContainer.remove(this.getParent());
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

public void populatesupplierDrugJTable(){
    
    DefaultTableModel dtm=(DefaultTableModel) supplierDrugJTable.getModel();
    Supplier s=(Supplier)supplierJComboBox.getSelectedItem();
    dtm.setRowCount(0);
        if(s!=null){
            
            for (Drug d : s.getDrugListOfSupplier()) {
                Object[] row = new Object[1];
                row[0] = d;
                dtm.addRow(row);
            }
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCatalogJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pharmacyNameJText;
    private javax.swing.JButton removeFromCatalogJButton;
    private javax.swing.JTable storeCatalogJTable;
    private javax.swing.JTable supplierDrugJTable;
    private javax.swing.JComboBox supplierJComboBox;
    // End of variables declaration//GEN-END:variables
}
