/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CvsStoreAdminRole;

import Business.Drug.Drug;
import Business.Drug.DrugCatalog;
import Business.Organization.CVSPharmacyStoreOrganization;
import Business.PharmacyInventory.InventoryItem;
import Business.PharmacyInventory.InventoryList;
import Business.PharmacySupplier.Supplier;
import Business.PharmacySupplier.SupplierCatalog;
import Business.Utils.MyIntegerVerifier;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Saurabh
 */
public class ManageInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageInventoryJPanel
     */
    private JPanel userProcessContainer;
    private InventoryList inventoryList;
    private CVSPharmacyStoreOrganization cvsStore;
    private SupplierCatalog supplierCatalog;
    public ManageInventoryJPanel(JPanel upc,CVSPharmacyStoreOrganization p,SupplierCatalog sc) {
        initComponents();
        this.userProcessContainer=upc;
        this.cvsStore=p;
        this.supplierCatalog=sc;
        this.inventoryList=cvsStore.getInventoryListOfPharmacy();
        pharmacyNameJText1.setText(cvsStore.getName());
        
        MyIntegerVerifier myintegerVerifier=new MyIntegerVerifier();
        addToInventoryQuantityjTextField.setInputVerifier(myintegerVerifier);
        populateInventoryList();     
        populateStoreDrugCatalogJTable();
    }
    
    public void populateStoreDrugCatalogJTable(){
        DefaultTableModel dtm=(DefaultTableModel)storeDrugCatalogJTable.getModel();
        storeDrugCatalogJTable.setRowSorter(new TableRowSorter(dtm));
        dtm.setRowCount(0);
        DrugCatalog drugCatalog=cvsStore.getDrugCatalogofPharmacy();
        for (Drug d : drugCatalog.getDrugList()) {
            Object[] row = new Object[2];
            row[0] = d;
            for(Supplier s:supplierCatalog.getSupplierList()){
                for(Drug x:s.getDrugListOfSupplier()){
                    if(x.getDrugName().equals(d.getDrugName())){
                        row[1] = s.getSupplierName();
                        
                    }
                }
                
            }
            dtm.addRow(row);
        }
    }
    public void populateInventoryList(){
        DefaultTableModel dtm=(DefaultTableModel)inventoryListJTable.getModel();
        inventoryListJTable.setRowSorter(new TableRowSorter(dtm));
        dtm.setRowCount(0);
        
        for (InventoryItem i : inventoryList.getInventoryList()) {
            
            Object[] row = new Object[13];
            row[0] = i;
            row[1] = i.getStockValue();
            if(i.getStockValue()< i.getThreshold()){
                i.setStockStatus("Below Threshold");
                row[2] = i.getStockStatus();
            }else{
                 i.setStockStatus("Above Threshold");
                 row[2] = i.getStockStatus();
            }
            row[3] = i.getThreshold();
            row[4] = i.getDrugItem().getExpirationDate();
            row[5] = i.getDrugItem().getManufacturingDate();
            row[6] = i.getDrugItem().getPowerOfDrugInMg();
            row[7] = i.getDrugItem().getSerialNumber();
            row[8] = i.getDrugItem().getStorageConditions();
            row[9]= i.getDrugItem().getSuggestedListPrice();
            row[10]= i.getDrugItem().getType();
            row[11]= i.getDrugItem().getfDADrugCategory();
            row[12]=i.getDrugItem().getDrugAllergies();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pharmacyNameJText1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryListJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        storeDrugCatalogJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addToInventoryQuantityjTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        pharmacyNameJText1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pharmacyNameJText1.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Inventory");

        inventoryListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Inventory Item", "Quantity", "Status", "Threshold", "Expiry Date", "Manufacturing Date", "Power(in mg)", "Serial Number", "Storage Conditions", "Suggested Price", "Type", "FDA Category", "Allergies"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventoryListJTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(inventoryListJTable);

        storeDrugCatalogJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drug Name", "Supplier"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(storeDrugCatalogJTable);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Button-Submit-icon.png"))); // NOI18N
        jButton1.setText("Add to Inventory");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/cart-remove-icon.png"))); // NOI18N
        jButton2.setText("Remove from Inventory");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/update.png"))); // NOI18N
        jButton3.setText("Update Inventory Item");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantity");

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/arrow-back-icon.png"))); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Store Catalog");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(42, 42, 42)
                                        .addComponent(pharmacyNameJText1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(37, 37, 37)
                                                .addComponent(addToInventoryQuantityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(backJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(65, 65, 65)
                                        .addComponent(jButton2)
                                        .addGap(65, 65, 65)
                                        .addComponent(jButton3)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(452, 452, 452))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pharmacyNameJText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addToInventoryQuantityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(49, 49, 49)
                .addComponent(backJButton)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow=inventoryListJTable.getSelectedRow();
       if(selectedRow<0){
           JOptionPane.showMessageDialog(null, "Select Item to delete", "Info", JOptionPane.INFORMATION_MESSAGE);
           
       }else{
           InventoryItem inventoryItem=(InventoryItem)inventoryListJTable.getValueAt(selectedRow,0);
           inventoryList.deleteInventoryItem(inventoryItem);
           populateInventoryList();
           JOptionPane.showMessageDialog(null, "Deleted", "Info", JOptionPane.INFORMATION_MESSAGE); 
           
           //JOption Pane display message for removal alert
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow=storeDrugCatalogJTable.getSelectedRow();
        
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a  row to add drug", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{  String fetchedVal=addToInventoryQuantityjTextField.getText();
                if(fetchedVal.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please enter valid quantity to be added", "Info", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                else {int fetchedQty=Integer.parseInt(fetchedVal);
                    if(fetchedQty<=0){
                    JOptionPane.showMessageDialog(null, "Please enter valid quantity to be added", "Info", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                    
                            boolean alreadyPresent=false;
                            Drug selectedDrug=(Drug)storeDrugCatalogJTable.getValueAt(selectedRow,0);
                            for(InventoryItem inventoryItem:inventoryList.getInventoryList()){
                            if(inventoryItem.getDrugItem()==selectedDrug){
                                int oldAvail=inventoryItem.getStockValue();
                                int newAvail=oldAvail+Integer.parseInt(addToInventoryQuantityjTextField.getText());
                                inventoryItem.setStockValue(newAvail);
                                populateInventoryList();
                                alreadyPresent=true;
                                break;
                            }
                        }
                        if(!alreadyPresent){

                            InventoryItem i=inventoryList.addInventoryItem();
                            i.setDrugItem(selectedDrug);
                            i.setStockValue(Integer.parseInt(addToInventoryQuantityjTextField.getText()));
                            populateInventoryList();

                        }
                    }
                }
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this.getParent().getParent());
                        userProcessContainer.remove(this.getParent());
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow=inventoryListJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a pharmacy row to view inventory details", "Info", JOptionPane.INFORMATION_MESSAGE);   
        }else{
            InventoryItem i=(InventoryItem)inventoryListJTable.getValueAt(selectedRow,0);
            UpdateInventoryItemJPanel aiijp=new UpdateInventoryItemJPanel(userProcessContainer,i);
            userProcessContainer.add("AddInventoryItemJPanel",new JScrollPane(aiijp));
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addToInventoryQuantityjTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable inventoryListJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pharmacyNameJText1;
    private javax.swing.JTable storeDrugCatalogJTable;
    // End of variables declaration//GEN-END:variables
}
