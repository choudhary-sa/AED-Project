/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CvsStoreAdminRole;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Business.Drug.Drug;
import Business.PharmacyInventory.InventoryItem;
import Business.PharmacyInventory.InventoryList;
import java.awt.Component;
import javax.swing.JScrollPane;
import javax.swing.JViewport;

/**
 *
 * @author Saurabh
 */


public class UpdateInventoryItemJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateInventoryItemJPanel
     */
    
    private JPanel userProcessContainer;
    private InventoryList inventoryList;
    private InventoryItem inventoryItem;
    public UpdateInventoryItemJPanel(JPanel upc,InventoryItem i) {
        initComponents();
        this.userProcessContainer=upc;
        this.inventoryItem=i;
        drugNameJText.setEnabled(false);
        drugSerialNumberJText.setEnabled(false);
        saveJButton.setEnabled(false);
        populateFields();
    }
    
    public void populateFields(){
        drugNameJText.setText(inventoryItem.getDrugItem().getDrugName());
        drugSerialNumberJText.setText(inventoryItem.getDrugItem().getSerialNumber());
        drugManufacturingDateJText.setText(inventoryItem.getDrugItem().getManufacturingDate());
        drugExpirationDateJText.setText(inventoryItem.getDrugItem().getExpirationDate());
        drugSuggestedSellingPriceJText.setText(String.valueOf(inventoryItem.getDrugItem().getSuggestedListPrice()));
        drugStorageConditionsJText.setText(inventoryItem.getDrugItem().getStorageConditions());
        drugFDASpecifiedCategoryJText.setText(inventoryItem.getDrugItem().getfDADrugCategory());
        drugTypeJText.setText(inventoryItem.getDrugItem().getType());
        drugPowerJText.setText(String.valueOf(inventoryItem.getDrugItem().getPowerOfDrugInMg()));
        drugAllergiesJText.setText(inventoryItem.getDrugItem().getDrugAllergies());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        drugNameJText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        drugSerialNumberJText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        drugManufacturingDateJText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        drugExpirationDateJText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        drugFDASpecifiedCategoryJText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        drugTypeJText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        drugAllergiesJText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        drugStorageConditionsJText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        saveJButton = new javax.swing.JButton();
        drugSuggestedSellingPriceJText = new javax.swing.JTextField();
        drugPowerJText = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Update Inventory Item");

        jLabel2.setText("Drug Name");

        drugNameJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugNameJTextActionPerformed(evt);
            }
        });

        jLabel3.setText("Serial Number");

        jLabel4.setText("Manufacturing Date");

        jLabel5.setText("Expiration Date");

        jLabel6.setText("Suggested Selling Price");

        jLabel8.setText("Drug Type");

        jLabel9.setText("Power in milligrams");

        jLabel10.setText("Allergies");

        jLabel11.setText("Storage Conditions");

        jLabel12.setText("FDA Specified Category");

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/arrow-back-icon.png"))); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        saveJButton.setBackground(new java.awt.Color(0, 0, 0));
        saveJButton.setForeground(new java.awt.Color(255, 255, 255));
        saveJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/save-icon.png"))); // NOI18N
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        drugSuggestedSellingPriceJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugSuggestedSellingPriceJTextActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/update.png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6))
                            .addGap(94, 94, 94)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(drugSerialNumberJText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(drugManufacturingDateJText, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(drugExpirationDateJText, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(drugNameJText)
                                .addComponent(drugSuggestedSellingPriceJText, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10)
                                .addComponent(backJButton))
                            .addGap(90, 90, 90)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(drugStorageConditionsJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drugFDASpecifiedCategoryJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drugTypeJText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drugAllergiesJText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(drugPowerJText, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(updateButton)
                                    .addGap(32, 32, 32)
                                    .addComponent(saveJButton))))))
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(drugNameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(drugSerialNumberJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(drugManufacturingDateJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(drugExpirationDateJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(drugSuggestedSellingPriceJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(drugStorageConditionsJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(drugFDASpecifiedCategoryJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(drugTypeJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(drugPowerJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(drugAllergiesJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(saveJButton)
                    .addComponent(updateButton))
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void drugNameJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugNameJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drugNameJTextActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        backAction();
        
    }//GEN-LAST:event_backJButtonActionPerformed
public void backAction(){
                        userProcessContainer.remove(this.getParent().getParent());
                        userProcessContainer.remove(this.getParent());
                        userProcessContainer.remove(this);
                        Component[] componentArray = userProcessContainer.getComponents();
                        Component component = componentArray[componentArray.length - 1];
                        JScrollPane jsp=(JScrollPane)component;
                        JViewport jv=(JViewport)jsp.getComponent(0);
                        ManageInventoryJPanel mijp = (ManageInventoryJPanel) jv.getComponent(0);
                        mijp.populateInventoryList();
                        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                        layout.previous(userProcessContainer);
}
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        // TODO add your handling code here:
        
                        boolean alreadyPresent=false;
                        Drug d=inventoryItem.getDrugItem();
                        d.setExpirationDate(drugExpirationDateJText.getText());
                        d.setManufacturingDate(drugManufacturingDateJText.getText());
                        d.setPowerOfDrugInMg(Integer.parseInt(drugPowerJText.getText()));
                        d.setStorageConditions(drugStorageConditionsJText.getText());
                        d.setSuggestedListPrice(drugSuggestedSellingPriceJText.getText());
                        d.setType(drugTypeJText.getText());
                        d.setfDADrugCategory(drugFDASpecifiedCategoryJText.getText());
                        d.setDrugAllergies(drugAllergiesJText.getText());
                        JOptionPane.showMessageDialog(null, "Updated", "Info", JOptionPane.INFORMATION_MESSAGE);
                        resetFields();
//    //-------------------------------------------------------------------------------------------------------   
//        boolean alreadyPresent=false;
//            for(Drug catalogDrug:pharmacy.getDrugCatalogofPharmacy().getDrugList()){
//                String enteredDrugName=drugNameJText.getText();
//                if(catalogDrug.getDrugName().equals(enteredDrugName)){
//                    for(InventoryItem inventoryItem:inventoryList.getInventoryList()){
//                        Drug existingDrug=inventoryItem.getDrugItem();
//                        if(existingDrug.getDrugName().equals(enteredDrugName)){
//                            int oldAvail=inventoryItem.getStockValue();
//                            int newAvail=oldAvail+Integer.parseInt(drugReceivedQuantityJText.getText());
//                            inventoryItem.setStockValue(newAvail);
//                            alreadyPresent=true;
//                            JOptionPane.showMessageDialog(null, "Updated", "Info", JOptionPane.INFORMATION_MESSAGE);
//                            break;
//                        }
//                    }
//                    if(!alreadyPresent){
//                        InventoryItem i=inventoryList.addInventoryItem();
//                        Drug d=i.getDrugItem();
//                        d.setDrugName(drugNameJText.getText());
//                        d.setExpirationDate(drugExpirationDateJText.getText());
//                        d.setManufacturingDate(drugManufacturingDateJText.getText());
//                        d.setPowerOfDrugInMg(Integer.parseInt(drugPowerJText.getText()));
//                        d.setSerialNumber(drugSerialNumberJText.getText());
//                        d.setStorageConditions(drugStorageConditionsJText.getText());
//                        d.setSuggestedListPrice(drugSuggestedSellingPriceJText.getText());
//                        d.setType(drugTypeJText.getText());
//                        d.setfDADrugCategory(drugFDASpecifiedCategoryJText.getText());
//                        i.setStockValue(Integer.parseInt(drugReceivedQuantityJText.getText()));
//                        JOptionPane.showMessageDialog(null, "Added new drug to inventory", "Info", JOptionPane.INFORMATION_MESSAGE);
//                        break;
//                    }
//                }else{
//                    JOptionPane.showMessageDialog(null, "Drug does not belong to Store Catalog.Abort operation.", "Info", JOptionPane.INFORMATION_MESSAGE);
//                    break;
//                }
//                    
//            }
//-----------------------------------------------------------------------------------------------------------------                    
            updateButton.setEnabled(true);
        
        
        
//            ArrayList<InventoryItem> list=inventoryList.getInventoryList();
//            //for(InventoryItem i:inventoryList.getInventoryList()){
//                if(list.isEmpty()){
//                    InventoryItem inventoryItem=inventoryList.addInventoryItem();
//                    Drug d=inventoryItem.getDrugItem();
//                    d.setDrugName(drugNameJText.getText());
//                    d.setExpirationDate(drugExpirationDateJText.getText());
//                    d.setManufacturingDate(drugManufacturingDateJText.getText());
//                    d.setPowerOfDrugInMg(Integer.parseInt(drugPowerJText.getText()));
//                    d.setSerialNumber(drugSerialNumberJText.getText());
//                    d.setStorageConditions(drugStorageConditionsJText.getText());
//                    d.setSuggestedListPrice(drugSuggestedSellingPriceJText.getText());
//                    d.setType(drugTypeJText.getText());
//                    d.setfDADrugCategory(drugFDASpecifiedCategoryJText.getText());
//                    int receivedStock=Integer.parseInt(drugReceivedQuantityJText.getText());
//                    int oldStockValue=inventoryItem.getStockValue();
//                    inventoryItem.setStockValue(oldStockValue+receivedStock);
//                    JOptionPane.showMessageDialog(null, "Inventory added empty", "Info", JOptionPane.INFORMATION_MESSAGE);
//                }
//                else{
//                    for(int a=0;a<list.size();a++){
//                            InventoryItem item=list.get(a);
//                            String eneteredName=drugNameJText.getText();
//                            String existingDrugName=item.getDrugItem().getDrugName();
//                            if(existingDrugName==eneteredName){
//                                int receivedStock=Integer.parseInt(drugReceivedQuantityJText.getText());
//                                int oldStockValue=item.getStockValue();
//                                item.setStockValue(oldStockValue+receivedStock);
//                                JOptionPane.showMessageDialog(null, "Inventory updated", "Info", JOptionPane.INFORMATION_MESSAGE);
//                                break;
//                            }else{   
//                                InventoryItem inventoryItem=inventoryList.addInventoryItem();
//                                Drug d=inventoryItem.getDrugItem();
//                                d.setDrugName(drugNameJText.getText());
//                                d.setExpirationDate(drugExpirationDateJText.getText());
//                                d.setManufacturingDate(drugManufacturingDateJText.getText());
//                                d.setPowerOfDrugInMg(Integer.parseInt(drugPowerJText.getText()));
//                                d.setSerialNumber(drugSerialNumberJText.getText());
//                                d.setStorageConditions(drugStorageConditionsJText.getText());
//                                d.setSuggestedListPrice(drugSuggestedSellingPriceJText.getText());
//                                d.setType(drugTypeJText.getText());
//                                d.setfDADrugCategory(drugFDASpecifiedCategoryJText.getText());
//                                int receivedStock=Integer.parseInt(drugReceivedQuantityJText.getText());
//                                int oldStockValue=inventoryItem.getStockValue();
//                                inventoryItem.setStockValue(oldStockValue+receivedStock);
//                                JOptionPane.showMessageDialog(null, "Inventory updated before break", "Info", JOptionPane.INFORMATION_MESSAGE);
//                                break;
//                        }   
//                   }
//                }

    }//GEN-LAST:event_saveJButtonActionPerformed
    public void resetFields(){
        drugAllergiesJText.setText("");
        drugExpirationDateJText.setText("");
        drugFDASpecifiedCategoryJText.setText("");
        drugManufacturingDateJText.setText("");
        drugNameJText.setText("");
        drugPowerJText.setText("");
        drugSerialNumberJText.setText("");
        drugStorageConditionsJText.setText("");
        drugSuggestedSellingPriceJText.setText("");
        drugTypeJText.setText("");
        
    }
    private void drugSuggestedSellingPriceJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugSuggestedSellingPriceJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drugSuggestedSellingPriceJTextActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        saveJButton.setEnabled(true);
        updateButton.setEnabled(false);

    }//GEN-LAST:event_updateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField drugAllergiesJText;
    private javax.swing.JTextField drugExpirationDateJText;
    private javax.swing.JTextField drugFDASpecifiedCategoryJText;
    private javax.swing.JTextField drugManufacturingDateJText;
    private javax.swing.JTextField drugNameJText;
    private javax.swing.JTextField drugPowerJText;
    private javax.swing.JTextField drugSerialNumberJText;
    private javax.swing.JTextField drugStorageConditionsJText;
    private javax.swing.JTextField drugSuggestedSellingPriceJText;
    private javax.swing.JTextField drugTypeJText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton saveJButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
