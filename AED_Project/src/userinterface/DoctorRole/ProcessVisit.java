/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.PatientVisit.Visit;
import Business.PatientVisit.Visit.VisitType;
import Business.Prescription.Dosage;
import Business.Prescription.Dosage.DosageType;
import Business.Prescription.Medication;
import Business.Prescription.Prescription;
import Business.UserAccount.UserAccount;
import Business.Utils.MyIntegerVerifier;
import Business.WorkQueue.AppointmentRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Saurabh
 */
public class ProcessVisit extends javax.swing.JPanel {

    /**
     * Creates new form ProcessVisit
     */
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Medication medication;
    private AppointmentRequest appointmentRequest;
    private Patient patient;
    private Visit visit;
    private Prescription prescription;
    private NurseOrganization nurseOrganization;
    private boolean closureStatus=false;
    private LabTestWorkRequest labTestWorkRequest;
    
    public ProcessVisit(UserAccount userAccount,AppointmentRequest appointmentRequest,Patient patient,Enterprise enterprise) {
        initComponents();
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.appointmentRequest=appointmentRequest;
        this.patient=patient;
        for(Organization org:this.enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof  NurseOrganization){
                this.nurseOrganization=(NurseOrganization) org;
                break;
            }
        }
        MyIntegerVerifier myIntegerVerifier=new MyIntegerVerifier();
        dosageQuantityjTextField5.setInputVerifier(myIntegerVerifier);
        populatedosageTimejComboBox1();
        initialDisable();
       
    }
    
    public void initialDisable(){
        
        cancelVisitjButton1.setEnabled(false);
        regularVisitJRadioButton.setEnabled(false);
        chemotherapyJRadioButton.setEnabled(false);
        makePrescriptionjButton1.setEnabled(false);
        drugNameJTextField.setEnabled(false);
        numberOfDaysjSpinner1.setEnabled(false);
        addDrugjButton2.setEnabled(false);
        makePrescriptionjButton1.setEnabled(false);
        addAnotherDrugjButton1.setEnabled(false);
        cancelAddjButton.setEnabled(false);
        removeDrugjButton1.setEnabled(false);
        updateDosagejButton1.setEnabled(false);
        dosageQuantityjTextField5.setEnabled(false);
        dosageTimejComboBox1.setEnabled(false);
        commentjTextField.setEnabled(false);
        cumulativePrescriptionjButton1.setEnabled(false);
        editDosageJButton.setEnabled(false);
        removeDosagejButton2.setEnabled(false);
        saveJButton.setEnabled(false);
        completeVisitjButton1.setEnabled(false);
        prescNotReqdjRadioButton2.setEnabled(false);
        prescpReqdjRadioButton1.setEnabled(false);
        
    }
    public void populatedosageTimejComboBox1(){
        dosageTimejComboBox1.removeAllItems();
        for(DosageType type:Dosage.DosageType.values()){
            dosageTimejComboBox1.addItem(type);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        regularVisitJRadioButton = new javax.swing.JRadioButton();
        chemotherapyJRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientCommentjTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        doctorFeedbackjTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        drugNameJTextField = new javax.swing.JTextField();
        makePrescriptionjButton1 = new javax.swing.JButton();
        addDrugjButton2 = new javax.swing.JButton();
        createVisitjButton3 = new javax.swing.JButton();
        numberOfDaysjSpinner1 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dosageQuantityjTextField5 = new javax.swing.JTextField();
        updateDosagejButton1 = new javax.swing.JButton();
        dosageTimejComboBox1 = new javax.swing.JComboBox();
        cancelVisitjButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        dosagejTable1 = new javax.swing.JTable();
        addAnotherDrugjButton1 = new javax.swing.JButton();
        commentjTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cancelAddjButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        presListjList1 = new javax.swing.JList();
        cumulativePrescriptionjButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        medicationjTable1 = new javax.swing.JTable();
        editDosageJButton = new javax.swing.JButton();
        removeDosagejButton2 = new javax.swing.JButton();
        saveJButton = new javax.swing.JButton();
        completeVisitjButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        prescpReqdjRadioButton1 = new javax.swing.JRadioButton();
        prescNotReqdjRadioButton2 = new javax.swing.JRadioButton();
        removeDrugjButton1 = new javax.swing.JButton();
        closejButton1 = new javax.swing.JButton();
        viewProfilejButton1 = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Process Visits", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Visit Type");

        buttonGroup1.add(regularVisitJRadioButton);
        regularVisitJRadioButton.setText("Regular");
        regularVisitJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regularVisitJRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(chemotherapyJRadioButton);
        chemotherapyJRadioButton.setText("Chemotherapy");
        chemotherapyJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemotherapyJRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Patient Comments:");

        patientCommentjTextArea1.setColumns(20);
        patientCommentjTextArea1.setRows(5);
        jScrollPane1.setViewportView(patientCommentjTextArea1);

        jLabel3.setText("DoctorComments:");

        doctorFeedbackjTextArea2.setColumns(20);
        doctorFeedbackjTextArea2.setRows(5);
        jScrollPane2.setViewportView(doctorFeedbackjTextArea2);

        jLabel5.setText("Drug Name");

        makePrescriptionjButton1.setBackground(new java.awt.Color(0, 0, 0));
        makePrescriptionjButton1.setForeground(new java.awt.Color(255, 255, 255));
        makePrescriptionjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/make-prescription.png"))); // NOI18N
        makePrescriptionjButton1.setText("Make Prescription");
        makePrescriptionjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePrescriptionjButton1ActionPerformed(evt);
            }
        });

        addDrugjButton2.setBackground(new java.awt.Color(0, 0, 0));
        addDrugjButton2.setForeground(new java.awt.Color(255, 255, 255));
        addDrugjButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/add-drug-to-prescription.png"))); // NOI18N
        addDrugjButton2.setText("Add Drug to Pres.");
        addDrugjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDrugjButton2ActionPerformed(evt);
            }
        });

        createVisitjButton3.setBackground(new java.awt.Color(0, 0, 0));
        createVisitjButton3.setForeground(new java.awt.Color(255, 255, 255));
        createVisitjButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/create-visit.png"))); // NOI18N
        createVisitjButton3.setText("Create Visit");
        createVisitjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVisitjButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("For Days");

        jLabel7.setText("Dosage Time");

        jLabel8.setText("Quantity per Dosage");

        updateDosagejButton1.setBackground(new java.awt.Color(0, 0, 0));
        updateDosagejButton1.setForeground(new java.awt.Color(255, 255, 255));
        updateDosagejButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/add-drug-to-prescription.png"))); // NOI18N
        updateDosagejButton1.setText("Add Dosage");
        updateDosagejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDosagejButton1ActionPerformed(evt);
            }
        });

        dosageTimejComboBox1.setBackground(new java.awt.Color(0, 0, 0));
        dosageTimejComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        dosageTimejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cancelVisitjButton1.setBackground(new java.awt.Color(0, 0, 0));
        cancelVisitjButton1.setForeground(new java.awt.Color(255, 255, 255));
        cancelVisitjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/cancel-visit.png"))); // NOI18N
        cancelVisitjButton1.setText("Cancel Visit");
        cancelVisitjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelVisitjButton1ActionPerformed(evt);
            }
        });

        dosagejTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Dosage Time", "Quantity", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dosagejTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(dosagejTable1);

        addAnotherDrugjButton1.setBackground(new java.awt.Color(0, 0, 0));
        addAnotherDrugjButton1.setForeground(new java.awt.Color(255, 255, 255));
        addAnotherDrugjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/add-another-durg.png"))); // NOI18N
        addAnotherDrugjButton1.setText("Add Another Drug");
        addAnotherDrugjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAnotherDrugjButton1ActionPerformed(evt);
            }
        });

        commentjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentjTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("Comment");

        cancelAddjButton.setBackground(new java.awt.Color(0, 0, 0));
        cancelAddjButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelAddjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/cancel.png"))); // NOI18N
        cancelAddjButton.setText("Cancel");
        cancelAddjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAddjButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Prescribed Drugs:");

        presListjList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane5.setViewportView(presListjList1);

        cumulativePrescriptionjButton1.setBackground(new java.awt.Color(0, 0, 0));
        cumulativePrescriptionjButton1.setForeground(new java.awt.Color(255, 255, 255));
        cumulativePrescriptionjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/cumulative.png"))); // NOI18N
        cumulativePrescriptionjButton1.setText("See Cumulative Prescription");
        cumulativePrescriptionjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cumulativePrescriptionjButton1ActionPerformed(evt);
            }
        });

        medicationjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Drug", "Dosage", "Days"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        medicationjTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(medicationjTable1);
        if (medicationjTable1.getColumnModel().getColumnCount() > 0) {
            medicationjTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            medicationjTable1.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        editDosageJButton.setBackground(new java.awt.Color(0, 0, 0));
        editDosageJButton.setForeground(new java.awt.Color(255, 255, 255));
        editDosageJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/edit.png"))); // NOI18N
        editDosageJButton.setText("Edit");
        editDosageJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDosageJButtonActionPerformed(evt);
            }
        });

        removeDosagejButton2.setBackground(new java.awt.Color(0, 0, 0));
        removeDosagejButton2.setForeground(new java.awt.Color(255, 255, 255));
        removeDosagejButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/remove-drug.png"))); // NOI18N
        removeDosagejButton2.setText("Remove");
        removeDosagejButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDosagejButton2ActionPerformed(evt);
            }
        });

        saveJButton.setBackground(new java.awt.Color(0, 0, 0));
        saveJButton.setForeground(new java.awt.Color(255, 255, 255));
        saveJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/save-dosage.png"))); // NOI18N
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        completeVisitjButton1.setBackground(new java.awt.Color(0, 0, 0));
        completeVisitjButton1.setForeground(new java.awt.Color(255, 255, 255));
        completeVisitjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/complete.png"))); // NOI18N
        completeVisitjButton1.setText("Complete Vist");
        completeVisitjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeVisitjButton1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Prescription Required?");

        buttonGroup4.add(prescpReqdjRadioButton1);
        prescpReqdjRadioButton1.setText("Yes");
        prescpReqdjRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescpReqdjRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup4.add(prescNotReqdjRadioButton2);
        prescNotReqdjRadioButton2.setText("No");
        prescNotReqdjRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescNotReqdjRadioButton2ActionPerformed(evt);
            }
        });

        removeDrugjButton1.setBackground(new java.awt.Color(0, 0, 0));
        removeDrugjButton1.setForeground(new java.awt.Color(255, 255, 255));
        removeDrugjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/remove-drug.png"))); // NOI18N
        removeDrugjButton1.setText("Remove Drug");
        removeDrugjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDrugjButton1ActionPerformed(evt);
            }
        });

        closejButton1.setBackground(new java.awt.Color(0, 0, 0));
        closejButton1.setForeground(new java.awt.Color(255, 255, 255));
        closejButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Close_delete_remove_exit_cross_x_button_error.png"))); // NOI18N
        closejButton1.setText("Close");
        closejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closejButton1ActionPerformed(evt);
            }
        });

        viewProfilejButton1.setBackground(new java.awt.Color(0, 0, 0));
        viewProfilejButton1.setForeground(new java.awt.Color(255, 255, 255));
        viewProfilejButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/view-patient.png"))); // NOI18N
        viewProfilejButton1.setText("View Patient Profile");
        viewProfilejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProfilejButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prescpReqdjRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prescNotReqdjRadioButton2))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makePrescriptionjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cumulativePrescriptionjButton1)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drugNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberOfDaysjSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addAnotherDrugjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addDrugjButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cancelAddjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeDrugjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel4))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateDosagejButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editDosageJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(saveJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeDosagejButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dosageTimejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dosageQuantityjTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(commentjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(completeVisitjButton1)
                    .addComponent(jLabel10)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(createVisitjButton3))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(regularVisitJRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chemotherapyJRadioButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelVisitjButton1)
                                .addGap(250, 250, 250)
                                .addComponent(viewProfilejButton1)
                                .addGap(35, 35, 35)
                                .addComponent(closejButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createVisitjButton3)
                    .addComponent(cancelVisitjButton1)
                    .addComponent(closejButton1)
                    .addComponent(viewProfilejButton1))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(regularVisitJRadioButton)
                        .addComponent(chemotherapyJRadioButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prescpReqdjRadioButton1)
                    .addComponent(prescNotReqdjRadioButton2))
                .addGap(14, 14, 14)
                .addComponent(makePrescriptionjButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dosageTimejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dosageQuantityjTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(commentjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateDosagejButton1)
                            .addComponent(removeDosagejButton2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editDosageJButton)
                            .addComponent(saveJButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(drugNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(numberOfDaysjSpinner1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addDrugjButton2)
                            .addComponent(cancelAddjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addAnotherDrugjButton1)
                            .addComponent(removeDrugjButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addComponent(cumulativePrescriptionjButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(completeVisitjButton1)
                .addGap(439, 439, 439))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void makePrescriptionjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePrescriptionjButton1ActionPerformed
        // TODO add your handling code here:
        
        drugNameJTextField.setEnabled(true);
        numberOfDaysjSpinner1.setEnabled(true);
        addDrugjButton2.setEnabled(true);
        makePrescriptionjButton1.setEnabled(false);
        
        
        
    }//GEN-LAST:event_makePrescriptionjButton1ActionPerformed

    private void regularVisitJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regularVisitJRadioButtonActionPerformed
        // TODO add your handling code here:
        visit.setVisitType(VisitType.Regular);
        labTestWorkRequest.setComment("Regular Checkup");
        
        
        
        
    }//GEN-LAST:event_regularVisitJRadioButtonActionPerformed

    private void createVisitjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createVisitjButton3ActionPerformed
        // TODO add your handling code here:
        closejButton1.setEnabled(false);
        regularVisitJRadioButton.setEnabled(true);
        chemotherapyJRadioButton.setEnabled(true);
        cancelVisitjButton1.setEnabled(true);
        //Creating new lab request for nurse to check BP,HR,Weight as per directions and checkup type.
        this.labTestWorkRequest=new LabTestWorkRequest();     
        //Associating the labrequest to the relevant appointment
        labTestWorkRequest.setAssociatedToAppointmentRequest(appointmentRequest);
        labTestWorkRequest.setRequestDate(new Date());
        labTestWorkRequest.setStatus("Initial");
        labTestWorkRequest.setSender(userAccount);
        labTestWorkRequest.setMessage("Record vital signs and status");
        labTestWorkRequest.setTestResult("Will be available after processing.");
        nurseOrganization.getWorkQueue().getWorkRequestList().add((WorkRequest)labTestWorkRequest);
        
        
        //Adding the lab test work request to patient as well so 
        //that patient can see pending lab tests in the queue
        appointmentRequest.getPatient().getWorkQueue().getWorkRequestList().add((WorkRequest)labTestWorkRequest);
        createVisitjButton3.setEnabled(false);
        visit=patient.getVisitHistory().addVisit(null);
        prescNotReqdjRadioButton2.setEnabled(true);
        prescpReqdjRadioButton1.setEnabled(true);
    }//GEN-LAST:event_createVisitjButton3ActionPerformed

    private void chemotherapyJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemotherapyJRadioButtonActionPerformed
        // TODO add your handling code here:
        visit.setVisitType(VisitType.Chemo);
        labTestWorkRequest.setComment("Chemo");
        
    }//GEN-LAST:event_chemotherapyJRadioButtonActionPerformed

    private void addDrugjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDrugjButton2ActionPerformed
        // TODO add your handling code here:
        prescription=visit.getPrescription();
        String drugName=drugNameJTextField.getText().trim();
        if(drugName.length()==0){
            JOptionPane.showMessageDialog(null,"Enter Valid drug name");
            return;
        }else{
            if((Integer)numberOfDaysjSpinner1.getValue()<=0){
                JOptionPane.showMessageDialog(null,"Days should be greater than 0");
                return;
             }
            else{
                    if(prescription.getMedicationList().isEmpty()){
                    medication=prescription.addMedication(drugName);
                    medication.setForDays((Integer)numberOfDaysjSpinner1.getValue());
            
                    }
                    if(!prescription.getMedicationList().isEmpty()){
                        boolean alreadyPresent=false;
                        
                        for(Medication med:visit.getPrescription().getMedicationList()){
                            if(drugName.equals(med.getDrugName()) ){
                             medication=med;
                             alreadyPresent=true;
                             break;
                             }
                        }
                        if(alreadyPresent){
                            medication.setForDays((Integer)numberOfDaysjSpinner1.getValue());
                        }
                        if(!alreadyPresent){
                             medication=prescription.addMedication(drugName);
                             medication.setForDays((Integer)numberOfDaysjSpinner1.getValue());
                        }
                    
                    }
            
            }
        
        }
        
        
        
        
        populateprescriptionjList();
        closureStatus=false;
        removeDrugjButton1.setEnabled(true);
        drugNameJTextField.setEnabled(false);
        commentjTextField.setEnabled(true);
        addDrugjButton2.setEnabled(false);
        numberOfDaysjSpinner1.setEnabled(false);
        dosageQuantityjTextField5.setEnabled(true);
        updateDosagejButton1.setEnabled(true);
        dosageTimejComboBox1.setEnabled(true);
        
        cancelAddjButton.setEnabled(true);
    }//GEN-LAST:event_addDrugjButton2ActionPerformed

   public void  populateprescriptionjList(){
       
       DefaultListModel listModel=new DefaultListModel();
       presListjList1.setModel(listModel);
       int size=prescription.getMedicationList().size();
       
       for(int i=0;i<size;i++){
           listModel.add(i,prescription.getMedicationList().get(i).getDrugName());
           
           
       }
      
    }
    private void updateDosagejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDosagejButton1ActionPerformed
        // TODO add your handling code here:
        String md=dosageQuantityjTextField5.getText().trim();
        String comment=commentjTextField.getText().trim();
        if(comment.length()==0||md.length()==0){
            JOptionPane.showMessageDialog(null, "Enter Comments and/or quantity.");
            return;
        }
        Dosage funcationDosage=null;
        float newQty=0;
        DosageType type=(DosageType)dosageTimejComboBox1.getSelectedItem();
        if(!medication.getDosageList().getDosageList().isEmpty()){
            int count=medication.getDosageList().getDosageList().size();
            boolean exist=false;
            for(int i=0;i<count;i++){
                if(medication.getDosageList().getDosageList().get(i).getDosageType().equals(type)){
                    exist=true;
                    funcationDosage=medication.getDosageList().getDosageList().get(i);
                    newQty=funcationDosage.getQuantity()+Float.parseFloat(md);
                    funcationDosage.setQuantity(newQty);
                    funcationDosage.setComment(comment);
                    break;
                    }
                }
            if(!exist){
                Dosage dosage=medication.getDosageList().addDosagetoList(type);
                dosage.setQuantity(Float.parseFloat(md));
                dosage.setComment(comment);
            }
            }
        else{
            Dosage dosage=medication.getDosageList().addDosagetoList(type);
            dosage.setQuantity(Float.parseFloat(md));
            dosage.setComment(comment);
      }
        dosageQuantityjTextField5.setText("");
        commentjTextField.setText("");
        cumulativePrescriptionjButton1.setEnabled(true);
        addAnotherDrugjButton1.setEnabled(true);
        editDosageJButton.setEnabled(true);
        removeDosagejButton2.setEnabled(true);
        completeVisitjButton1.setEnabled(true);
        closureStatus=true;
        populatedosageTable();
        populatemedicationjTable1();
        completeVisitjButton1.setEnabled(true);
    }//GEN-LAST:event_updateDosagejButton1ActionPerformed
public void populatedosageTable(){
    DefaultTableModel model = (DefaultTableModel) dosagejTable1.getModel();
        dosagejTable1.setRowSorter(new TableRowSorter(model));
        model.setRowCount(0);
        for (Dosage dosageInList :medication.getDosageList().getDosageList()){
            
            Object[] row = new Object[3];
            row[0] = dosageInList;
            row[1] = dosageInList.getQuantity();
            row[2] = dosageInList.getComment();
            
            model.addRow(row);
        }
}
    private void cancelVisitjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelVisitjButton1ActionPerformed
        // TODO add your handling code here:
        patient.getVisitHistory().getVisitHistory().remove(visit);
        nurseOrganization.getWorkQueue().getWorkRequestList().remove((WorkRequest)labTestWorkRequest);
        appointmentRequest.getPatient().getWorkQueue().getWorkRequestList().remove((WorkRequest)labTestWorkRequest);
        appointmentRequest.setStatus("Appointment Due.");
        JTabbedPane jtab=(JTabbedPane) cancelVisitjButton1.getParent().getParent();
        CheckAppointmentsJPanel cajp=(CheckAppointmentsJPanel)jtab.getComponentAt(0);
        cajp.populatedoctorWorkQueueJTable();
        jtab.remove(this);
        jtab.setSelectedIndex(0);
        
    }//GEN-LAST:event_cancelVisitjButton1ActionPerformed

    private void addAnotherDrugjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAnotherDrugjButton1ActionPerformed
        // TODO add your handling code here:
        closureStatus=true;
        addDrugjButton2.setEnabled(true);
        drugNameJTextField.setEnabled(true);
        numberOfDaysjSpinner1.setEnabled(true);
        addAnotherDrugjButton1.setEnabled(false);
        updateDosagejButton1.setEnabled(false);
        dosageQuantityjTextField5.setEnabled(false);
        dosageTimejComboBox1.setEnabled(false);
        cumulativePrescriptionjButton1.setEnabled(false);
        drugNameJTextField.setText("");
        removeDosagejButton2.setEnabled(false);
        editDosageJButton.setEnabled(false);
        saveJButton.setEnabled(false);
        completeVisitjButton1.setEnabled(false);
        clearDosageTable();
        clearpresListjList1();
        
    }//GEN-LAST:event_addAnotherDrugjButton1ActionPerformed

    public void clearDosageTable(){
        DefaultTableModel model = (DefaultTableModel) dosagejTable1.getModel();
        dosagejTable1.setRowSorter(new TableRowSorter(model));
        int rowCount=model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
    }
    private void cancelAddjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAddjButtonActionPerformed
        // TODO add your handling code here:
        clearDosageTable();
        String drugName=drugNameJTextField.getText().trim();
        for(Medication medication:prescription.getMedicationList()){
            if(medication.getDrugName().equals(this.medication)){
                this.medication=medication;
                break;
            }
        }
        populateprescriptionjList();
        closureStatus=false;
        drugNameJTextField.setText("");
        numberOfDaysjSpinner1.setEnabled(true);
        prescription.getMedicationList().remove(medication);
        cancelAddjButton.setEnabled(false);
        addAnotherDrugjButton1.setEnabled(false);
        removeDrugjButton1.setEnabled(false);
        dosageTimejComboBox1.setEnabled(false);
        dosageQuantityjTextField5.setEnabled(false);
        commentjTextField.setEnabled(false);
        updateDosagejButton1.setEnabled(false);
        addDrugjButton2.setEnabled(true);
        drugNameJTextField.setEnabled(true);
        removeDosagejButton2.setEnabled(false);
        editDosageJButton.setEnabled(false);
    }//GEN-LAST:event_cancelAddjButtonActionPerformed

    private void cumulativePrescriptionjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cumulativePrescriptionjButton1ActionPerformed
        // TODO add your handling code here:
        populatemedicationjTable1();
    }//GEN-LAST:event_cumulativePrescriptionjButton1ActionPerformed

    private void commentjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentjTextFieldActionPerformed

    private void removeDosagejButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDosagejButton2ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow=dosagejTable1.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Select a dosage to be removed");
            return;
        }else{
            Dosage dosageToremove=(Dosage)dosagejTable1.getValueAt(selectedRow, 0);
            medication.getDosageList().getDosageList().remove(dosageToremove);
            if(medication.getDosageList().getDosageList().isEmpty()){
                addAnotherDrugjButton1.setEnabled(false);
            }
            populatedosageTable();
        }
        closureStatus=false;
        cumulativePrescriptionjButton1.setEnabled(false);
    }//GEN-LAST:event_removeDosagejButton2ActionPerformed

    private void editDosageJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDosageJButtonActionPerformed
        // TODO add your handling code here:
        
        
        
        closureStatus=false;
        int selectedRow=dosagejTable1.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Select a dosage to be edited");
            return;
        }else{
            
            Dosage dosage=(Dosage)dosagejTable1.getValueAt(selectedRow, 0);
            dosageQuantityjTextField5.setText(Float.toString(dosage.getQuantity()));
            commentjTextField.setText(dosage.getComment());
        
            
        }
        cumulativePrescriptionjButton1.setEnabled(false);
        updateDosagejButton1.setEnabled(false);
        removeDosagejButton2.setEnabled(false);
        saveJButton.setEnabled(true);
        editDosageJButton.setEnabled(false);
    }//GEN-LAST:event_editDosageJButtonActionPerformed

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=dosagejTable1.getSelectedRow();
        String md=dosageQuantityjTextField5.getText().trim();
        String comment=commentjTextField.getText().trim();
        if(comment.length()==0||md.length()==0){
            JOptionPane.showMessageDialog(null, "Enter Comments and/or quantity.");
            return;
        }else{
            
            Dosage dosage=(Dosage)dosagejTable1.getValueAt(selectedRow, 0);
            dosage.setComment(comment);
            dosage.setQuantity(Float.parseFloat(md));
            
        
            
        }
        closureStatus=true;
        cumulativePrescriptionjButton1.setEnabled(true);
        updateDosagejButton1.setEnabled(true);
        removeDosagejButton2.setEnabled(true);
        saveJButton.setEnabled(false);
        editDosageJButton.setEnabled(true);
        dosageQuantityjTextField5.setText("");
        commentjTextField.setText("");
        populatedosageTable();
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void completeVisitjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeVisitjButton1ActionPerformed
        // TODO add your handling code here:
       
        if(closureStatus==false){
            JOptionPane.showMessageDialog(null, "Please complete prescrition properly to close the visit.");
            return;
        }
        appointmentRequest.setResolveDate(new Date());
        visit.setPatientComments(patientCommentjTextArea1.getText());
        JOptionPane.showMessageDialog(null,visit.getPatientComments());
        visit.setDoctorFeedback(doctorFeedbackjTextArea2.getText());
        JOptionPane.showMessageDialog(null,visit.getDoctorFeedback());
        appointmentRequest.setStatus("Appointment Completed");
        JTabbedPane jtab=(JTabbedPane) cancelVisitjButton1.getParent().getParent();
        CheckAppointmentsJPanel cajp=(CheckAppointmentsJPanel)jtab.getComponentAt(0);
        cajp.populatedoctorWorkQueueJTable();
        jtab.remove(this);
        jtab.setSelectedIndex(0);
        
    }//GEN-LAST:event_completeVisitjButton1ActionPerformed

    private void prescpReqdjRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescpReqdjRadioButton1ActionPerformed
        // TODO add your handling code here:
        if(visit.getPrescription()==null){
            visit.setPrescription(new Prescription());
        }
        makePrescriptionjButton1.setEnabled(true);
        visit.setPrescriptionRequired(true);
    }//GEN-LAST:event_prescpReqdjRadioButton1ActionPerformed

    private void prescNotReqdjRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescNotReqdjRadioButton2ActionPerformed
        // TODO add your handling code here:
        makePrescriptionjButton1.setEnabled(false);
        visit.setPrescriptionRequired(false);
        completeVisitjButton1.setEnabled(true);
        visit.setPrescription(null);
        drugNameJTextField.setText("");
        makePrescriptionjButton1.setEnabled(false);
        numberOfDaysjSpinner1.setValue(0);
        numberOfDaysjSpinner1.setEnabled(false);
        addDrugjButton2.setEnabled(false);
        cancelAddjButton.setEnabled(false);
        addAnotherDrugjButton1.setEnabled(false);
        dosageTimejComboBox1.setEnabled(false);
        dosageQuantityjTextField5.setEnabled(false);
        dosageQuantityjTextField5.setText("");
        commentjTextField.setEnabled(false);
        commentjTextField.setText("");
        updateDosagejButton1.setEnabled(false);
        removeDosagejButton2.setEnabled(false);
        editDosageJButton.setEnabled(false);
        saveJButton.setEnabled(false);
        removeDrugjButton1.setEnabled(false);
        closureStatus=true;
        clearDosageTable();
        clearCumulativePrescriptionTable();
        clearpresListjList1();

        
    }//GEN-LAST:event_prescNotReqdjRadioButton2ActionPerformed

    private void removeDrugjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDrugjButton1ActionPerformed
        // TODO add your handling code here:
        closureStatus=false;
        if(prescription.getMedicationList().isEmpty()){
            JOptionPane.showMessageDialog(null,"List has been emptied");
            removeDrugjButton1.setEnabled(false);
            addAnotherDrugjButton1.setEnabled(false);
            return;
        }
        try{
                 presListjList1.getSelectedValue().toString();}
             catch(Exception e){
                 JOptionPane.showMessageDialog(null, "Select Drug from below list", "Info", JOptionPane.INFORMATION_MESSAGE);
                 return;
             }
       
       String drugToBeRemoved=presListjList1.getSelectedValue().toString();
       Medication med=null;
       for(Medication m:prescription.getMedicationList()){
           if(m.getDrugName().equals(drugToBeRemoved)){
               med=m;
           }
       }
       prescription.getMedicationList().remove(med);
       drugNameJTextField.setText("");
       drugNameJTextField.setEnabled(true);
       numberOfDaysjSpinner1.setEnabled(true);
       addDrugjButton2.setEnabled(true);
       cancelAddjButton.setEnabled(false);
       dosageTimejComboBox1.setEnabled(false);
        dosageQuantityjTextField5.setEnabled(false);
        dosageQuantityjTextField5.setText("");
        commentjTextField.setEnabled(false);
        commentjTextField.setText("");
        updateDosagejButton1.setEnabled(false);
        removeDosagejButton2.setEnabled(false);
        editDosageJButton.setEnabled(false);
        saveJButton.setEnabled(false);
        
        clearDosageTable();
        clearCumulativePrescriptionTable();
       populateprescriptionjList();
    }//GEN-LAST:event_removeDrugjButton1ActionPerformed

    private void closejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closejButton1ActionPerformed
        // TODO add your handling code here:
        appointmentRequest.setStatus("Appointment Due.");
        JTabbedPane jtab=(JTabbedPane) closejButton1.getParent().getParent();
         CheckAppointmentsJPanel cajp=(CheckAppointmentsJPanel)jtab.getComponentAt(0);
        cajp.populatedoctorWorkQueueJTable();
        jtab.remove(this);
        jtab.setSelectedIndex(0);
    }//GEN-LAST:event_closejButton1ActionPerformed

    private void viewProfilejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProfilejButton1ActionPerformed
        // TODO add your handling code here:
        JTabbedPane jtab=(JTabbedPane) viewProfilejButton1.getParent().getParent();
        ViewJPanel pv=new ViewJPanel(patient);
        jtab.add("Patient Profile",pv);
        jtab.setSelectedIndex(2);
    }//GEN-LAST:event_viewProfilejButton1ActionPerformed
public void clearCumulativePrescriptionTable(){
    DefaultTableModel model = (DefaultTableModel) medicationjTable1.getModel();
        dosagejTable1.setRowSorter(new TableRowSorter(model));
        int rowCount=model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
}
     
public void clearpresListjList1(){
    DefaultListModel listModel=new DefaultListModel();
       presListjList1.setModel(listModel);
       listModel.removeAllElements();
}
    
public void populatemedicationjTable1(){
    DefaultTableModel model=(DefaultTableModel)medicationjTable1.getModel();
    model.setRowCount(0);
    for(Medication medi:prescription.getMedicationList()){
      Object[] rowOut=new Object[3];
        for(Dosage dose:medi.getDosageList().getDosageList()){
            Object[] row=new Object[3];
            row[0]=medi;
            row[1]=dose.getDosageType().toString()+"  /  "+dose.getQuantity()+"  /  "+dose.getComment();
            row[2]=medi.getForDays();
            model.addRow(row);
            
            
        }
            rowOut[0]="-------------------------------------------";
            rowOut[1]="--------------------------------------------------------------";
            rowOut[2]="-----------------------------";
        model.addRow(rowOut);
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAnotherDrugjButton1;
    private javax.swing.JButton addDrugjButton2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton cancelAddjButton;
    private javax.swing.JButton cancelVisitjButton1;
    private javax.swing.JRadioButton chemotherapyJRadioButton;
    private javax.swing.JButton closejButton1;
    private javax.swing.JTextField commentjTextField;
    private javax.swing.JButton completeVisitjButton1;
    private javax.swing.JButton createVisitjButton3;
    private javax.swing.JButton cumulativePrescriptionjButton1;
    private javax.swing.JTextArea doctorFeedbackjTextArea2;
    private javax.swing.JTextField dosageQuantityjTextField5;
    private javax.swing.JComboBox dosageTimejComboBox1;
    private javax.swing.JTable dosagejTable1;
    private javax.swing.JTextField drugNameJTextField;
    private javax.swing.JButton editDosageJButton;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton makePrescriptionjButton1;
    private javax.swing.JTable medicationjTable1;
    private javax.swing.JSpinner numberOfDaysjSpinner1;
    private javax.swing.JTextArea patientCommentjTextArea1;
    private javax.swing.JList presListjList1;
    private javax.swing.JRadioButton prescNotReqdjRadioButton2;
    private javax.swing.JRadioButton prescpReqdjRadioButton1;
    private javax.swing.JRadioButton regularVisitJRadioButton;
    private javax.swing.JButton removeDosagejButton2;
    private javax.swing.JButton removeDrugjButton1;
    private javax.swing.JButton saveJButton;
    private javax.swing.JButton updateDosagejButton1;
    private javax.swing.JButton viewProfilejButton1;
    // End of variables declaration//GEN-END:variables
}
