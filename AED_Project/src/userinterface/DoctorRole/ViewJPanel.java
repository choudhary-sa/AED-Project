/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;
import Business.Patient.Patient;
import Business.Utils.AgeCalculator;
import java.util.ArrayList;
import Business.VitalSigns.VitalSignOfPatient;
import java.awt.Color;
import Business.VitalSigns.VitalSignHistoryOfPatient;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Saurabh
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    private VitalSignHistoryOfPatient vsh;
    private Patient patient;
    
    public ViewJPanel(Patient patient) {
        initComponents();
        this.patient = patient;
        displayPatient(patient);
        this.vsh = patient.getVsh();
        populateTable();
    }
    private void populateTable(){
        DefaultTableModel dtm= (DefaultTableModel)vitalsTable.getModel();
        int rowCount=vitalsTable.getRowCount();
        for(int i=rowCount -1;i>=0;i--){
            dtm.removeRow(i);
        }
        ArrayList<VitalSignOfPatient> arrayList=vsh.getVitalSignList();
        for(VitalSignOfPatient vs: arrayList){
        Object row[]=new Object[2];
        row[0]=vs;
        row[1]=createStatus(vs);
//        if(row[1]=="Normal"){
//           dtm.
//           
//        }
        dtm.addRow(row);
    }
    }
    
    public void resetFields()
{
    
    heartrate.setText("");
    resprate.setText("");
    weight.setText("");
    bprate.setText("");
}
    public void displayPatient(Patient patient){
         patientFullName.setText(patient.toString());
         genderJText.setText(patient.getGender());
         float years=AgeCalculator.calculategetage(new Date(), patient.getDateOfBirth());
         float months=AgeCalculator.getMonths(new Date(), patient.getDateOfBirth());
         String ageText=(Float.toString(years))+" Yrs "+(Float.toString(months))+" Mnths ";
         age.setText(ageText);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        patientFullName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        genderJText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        resprate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        heartrate = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bprate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        rrstatus = new javax.swing.JTextField();
        hrstatus = new javax.swing.JTextField();
        bpstatus = new javax.swing.JTextField();
        wstatus = new javax.swing.JTextField();
        closejButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Patient Details");

        jLabel2.setText("Patient Name");

        jLabel4.setText("Age");

        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });

        jLabel6.setText("Gender");

        vitalsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Time Stamp", "Vital Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalsTable);
        if (vitalsTable.getColumnModel().getColumnCount() > 0) {
            vitalsTable.getColumnModel().getColumn(0).setResizable(false);
            vitalsTable.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Other-Search-Metro-icon.png"))); // NOI18N
        jButton1.setText("View Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Vital Sign Details");

        jLabel8.setText("Respiratory Rate");

        heartrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartrateActionPerformed(evt);
            }
        });

        jLabel9.setText("Heart Rate");

        bprate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bprateActionPerformed(evt);
            }
        });

        jLabel10.setText("Systolic Blood Pressure");

        jLabel11.setText("Weight");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Remark");

        rrstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rrstatusActionPerformed(evt);
            }
        });

        closejButton1.setBackground(new java.awt.Color(0, 0, 0));
        closejButton1.setForeground(new java.awt.Color(255, 255, 255));
        closejButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Close_delete_remove_exit_cross_x_button_error.png"))); // NOI18N
        closejButton1.setText("Close");
        closejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closejButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closejButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel4)))
                                .addGap(126, 126, 126)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patientFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(genderJText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(heartrate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resprate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bprate, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12)
                                    .addComponent(bpstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hrstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rrstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(closejButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(patientFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(genderJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resprate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(rrstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(heartrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(hrstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bprate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(bpstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(wstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageActionPerformed

    private void heartrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartrateActionPerformed

    private void bprateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bprateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bprateActionPerformed

    private void rrstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rrstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rrstatusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int patientage;
        boolean rrstatusflag;
        boolean hrstatusflag;
        boolean wstatusflag;
        boolean bpstatusflag;
        float years=AgeCalculator.calculategetage(new Date(), patient.getDateOfBirth());
        int age=(int) (years/1);
        int selectedRow= vitalsTable.getSelectedRow();
        if(selectedRow>=0){
            VitalSignOfPatient vs = (VitalSignOfPatient)vitalsTable.getValueAt(selectedRow,0);
            bprate.setText(String.valueOf(vs.getPatientSBP()));
            heartrate.setText(String.valueOf(vs.getPatientHR()));
            weight.setText(String.valueOf(vs.getPatientW()));
            resprate.setText(String.valueOf(vs.getPatientRR()));
            rrstatusflag = rrstatus(vs.getPatientRR(),age);
            if(rrstatusflag == true){
                rrstatus.setText("Normal");
                rrstatus.setBackground(Color.green);
            }else{
                rrstatus.setText("Abnormal");
                rrstatus.setBackground(Color.red);
            }
            
            hrstatusflag = hrstatus(vs.getPatientHR(),age);
            if(hrstatusflag == true){
                hrstatus.setText("Normal");
                hrstatus.setBackground(Color.green);
            }else{
                hrstatus.setText("Abormal");
                hrstatus.setBackground(Color.red);
            }
            
            wstatusflag = wstatus(vs.getPatientW(),age);
            if(wstatusflag == true){
                wstatus.setText("Normal");
                wstatus.setBackground(Color.green);
            }else{
                wstatus.setText("Abnormal");
                wstatus.setBackground(Color.red);
            }
            
            bpstatusflag = bpstatus(vs.getPatientSBP(),age);
            if(bpstatusflag == true){
                bpstatus.setText("Normal");
                bpstatus.setBackground(Color.green);
            }else{
                bpstatus.setText("Abnormal");
                bpstatus.setBackground(Color.red);
            }
            
            
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row from the table first","Alert",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void closejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closejButton1ActionPerformed
        // TODO add your handling code here:
        
        JTabbedPane jtab=(JTabbedPane) closejButton1.getParent().getParent();
        jtab.remove(this);
        
    }//GEN-LAST:event_closejButton1ActionPerformed

    public String createStatus(VitalSignOfPatient vs){
        String status="";
        float bp;
        float hr;
        float w;
        float rr;
        
        boolean rrstatusflag;
        boolean hrstatusflag;
        boolean wstatusflag;
        boolean bpstatusflag;
        
            bp = vs.getPatientSBP();
            hr = vs.getPatientHR();
            w = vs.getPatientW();
            rr = vs.getPatientRR();
            float years=AgeCalculator.calculategetage(new Date(), patient.getDateOfBirth());
            int age=(int) (years/1);
                        
            bpstatusflag = bpstatus(bp,age);
            rrstatusflag = rrstatus(rr,age);
            hrstatusflag = hrstatus(hr,age);
            wstatusflag = wstatus(w,age);
            if((bpstatusflag && rrstatusflag && hrstatusflag && wstatusflag)== true){
                status = "Normal";
            }
            else{
                status = "Abnormal";
            }    
        return status;
    }
    
    public boolean rrstatus(Float rr, int age){
        boolean normal = false;
        if(age > 0 && age < 13 && rr >= 20 && rr <= 30){
            //rrstatus.setText("Normal");
            normal = true;
        }
        if(age > 12 && rr > 11 && rr < 21){
            //rrstatus.setText("Normal");
            normal = true;
        }
        return normal;
    }
    
    public boolean hrstatus(Float hr, int age){
        boolean normal = false;
        if(age >= 1 && age <= 3 && hr > 79 && hr < 131){
            //hrstatus.setText("Normal");
            normal = true;
        }
        
        if(age >= 4 && age <= 5 && hr > 79 && hr < 121){
            //hrstatus.setText("Normal");
            normal = true;
        }
        if(age >= 6 && age <= 12 && hr > 69 && hr < 111){
            //hrstatus.setText("Normal");
            normal = true;
        }
        if(age >= 13 && hr > 54 && hr < 106){
            //hrstatus.setText("Normal");
            normal = true;
        }
        
        return normal;
    }
    
    public boolean wstatus(Float w, int age){
        boolean normal = false;
        if(age > 0 && age < 4 && w > 21 && w < 32){
            //wstatus.setText("Normal");
            normal = true;
        }
        
        if(age > 3 && age < 6 && w > 30 && w < 41){
            //wstatus.setText("Normal");
            normal = true;
        }
        
        if(age > 5 && age < 13 && w > 10 && w < 93){
            //wstatus.setText("Normal");
            normal = true;
        }
        
        if(age > 12 && w > 110){
            //wstatus.setText("Normal");
            normal = true;
        }
        return normal;
    }
    
    public boolean bpstatus(Float bp, int age){
        boolean normal = false;
        if(age > 0 && age < 6 && bp > 79 && bp < 111){
            //bpstatus.setText("Normal");
            normal = true;
        }
        
        if(age > 5 && age < 13 && bp > 79 && bp < 121){
            //bpstatus.setText("Normal");
            normal = true;
        }
        
        if(age > 12 && bp >109 && bp < 121){
            //bpstatus.setText("Normal");
            normal = true;
        }
        return normal;
    }
    
public void status(Float bp,Float hr, Float w, Float rr, int age){
    if(age >= 1 && age <= 3){
        if(bp >= 80 && bp <= 110){
            bpstatus.setText("Normal");
        }
        else{
            bpstatus.setText("Abnormal");
        }
        if(hr >= 80 && hr <= 130){
            hrstatus.setText("Normal");
        }
        else{
            hrstatus.setText("Abnormal");
        }
        if(w >= 22 && w <= 31){
            wstatus.setText("Normal");
        }
        else{
            wstatus.setText("Abormal");
        }
       
    }
    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JTextField bprate;
    private javax.swing.JTextField bpstatus;
    private javax.swing.JButton closejButton1;
    private javax.swing.JTextField genderJText;
    private javax.swing.JTextField heartrate;
    private javax.swing.JTextField hrstatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patientFullName;
    private javax.swing.JTextField resprate;
    private javax.swing.JTextField rrstatus;
    private javax.swing.JTable vitalsTable;
    private javax.swing.JTextField weight;
    private javax.swing.JTextField wstatus;
    // End of variables declaration//GEN-END:variables
}
